<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liandao.onlineteaching.dao.NoteMapper">
    <insert id="create" parameterType="Note">
        INSERT INTO note (title, content, type, user_id, category_id)
        VALUES (#{title}, #{content}, #{type}, #{userId}, #{categoryId})
    </insert>

    <select id="getNoteListWithCollect" resultType="Note">
        SELECT
            n.id,
            n.title,
            n.content,
            n.type,
            n.read_count,
            n.create_time,
            n.update_time,
            category.name AS category_name,
            user.username AS author,
            collect.id    AS collect_id
        FROM note AS n
            INNER JOIN category ON n.category_id = category.id
            INNER JOIN user ON n.user_id = user.id
            LEFT JOIN collect ON collect.note_id = n.id AND collect.user_id = #{userId}
        WHERE n.type = '1'
        ORDER BY n.create_time DESC
    </select>

    <select id="getNote" resultType="Note">
        SELECT
            n.id,
            n.title,
            n.content,
            n.type,
            n.read_count,
            n.create_time,
            n.update_time,
            n.user_id,
            category.name AS category_name,
            user.username AS author,
            collect.id    AS collect_id
        FROM note as n
            INNER JOIN category ON n.category_id = category.id
            INNER JOIN user ON n.user_id = user.id
            LEFT JOIN collect ON collect.note_id = n.id AND collect.user_id = #{userId}
        WHERE n.id = #{id}
    </select>

    <update id="updateReadCount" parameterType="Note">
        UPDATE note
        SET read_count = #{readCount}
        WHERE id = #{id}
    </update>

    <select id="getNoteList" resultType="Note">
        SELECT
        n.id,
        n.title,
        n.type,
        n.read_count,
        n.create_time,
        n.update_time,
        n.user_id,
        c.name AS category_name,
        u.username AS author
        FROM note AS n
        INNER JOIN user AS u on n.user_id = u.id
        INNER JOIN category AS c on n.category_id = c.id
        WHERE 1 = 1
        <if test="id != null and id != 0">
            AND n.id = #{id}
        </if>
        <if test="title != null and title != ''">
            AND n.title LIKE '%${title}%'
        </if>
        AND n.type = '1'
        ORDER BY id DESC
    </select>

    <select id="getNoteListByUser" resultType="Note">
        SELECT
            n.id,
            n.title,
            n.content,
            n.type,
            n.read_count,
            n.create_time,
            n.update_time,
            n.user_id,
            c.name AS category_name
        FROM note AS n
            INNER JOIN category AS c on n.category_id = c.id
        WHERE n.user_id = #{userId}
        ORDER BY id DESC
    </select>

    <delete id="delete">
        DELETE FROM note
        WHERE id = #{id}
    </delete>

    <select id="findById" resultType="Note">
        SELECT
            id,
            title,
            type,
            read_count,
            create_time,
            update_time,
            user_id,
            category_id
        FROM note
        WHERE id = #{id}
    </select>
</mapper>